// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';



export class YawCorrectionSettings implements flatbuffers.IUnpackableObject<YawCorrectionSettingsT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):YawCorrectionSettings {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsYawCorrectionSettings(bb:flatbuffers.ByteBuffer, obj?:YawCorrectionSettings):YawCorrectionSettings {
  return (obj || new YawCorrectionSettings()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsYawCorrectionSettings(bb:flatbuffers.ByteBuffer, obj?:YawCorrectionSettings):YawCorrectionSettings {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new YawCorrectionSettings()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

enabled():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

amountInDegPerSec():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;
}

alignLegTrackers():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

alignLegTrackersToUpperBody():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

static startYawCorrectionSettings(builder:flatbuffers.Builder) {
  builder.startObject(4);
}

static addEnabled(builder:flatbuffers.Builder, enabled:boolean) {
  builder.addFieldInt8(0, +enabled, +false);
}

static addAmountInDegPerSec(builder:flatbuffers.Builder, amountInDegPerSec:number) {
  builder.addFieldFloat32(1, amountInDegPerSec, 0.0);
}

static addAlignLegTrackers(builder:flatbuffers.Builder, alignLegTrackers:boolean) {
  builder.addFieldInt8(2, +alignLegTrackers, +false);
}

static addAlignLegTrackersToUpperBody(builder:flatbuffers.Builder, alignLegTrackersToUpperBody:boolean) {
  builder.addFieldInt8(3, +alignLegTrackersToUpperBody, +false);
}

static endYawCorrectionSettings(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createYawCorrectionSettings(builder:flatbuffers.Builder, enabled:boolean, amountInDegPerSec:number, alignLegTrackers:boolean, alignLegTrackersToUpperBody:boolean):flatbuffers.Offset {
  YawCorrectionSettings.startYawCorrectionSettings(builder);
  YawCorrectionSettings.addEnabled(builder, enabled);
  YawCorrectionSettings.addAmountInDegPerSec(builder, amountInDegPerSec);
  YawCorrectionSettings.addAlignLegTrackers(builder, alignLegTrackers);
  YawCorrectionSettings.addAlignLegTrackersToUpperBody(builder, alignLegTrackersToUpperBody);
  return YawCorrectionSettings.endYawCorrectionSettings(builder);
}

unpack(): YawCorrectionSettingsT {
  return new YawCorrectionSettingsT(
    this.enabled(),
    this.amountInDegPerSec(),
    this.alignLegTrackers(),
    this.alignLegTrackersToUpperBody()
  );
}


unpackTo(_o: YawCorrectionSettingsT): void {
  _o.enabled = this.enabled();
  _o.amountInDegPerSec = this.amountInDegPerSec();
  _o.alignLegTrackers = this.alignLegTrackers();
  _o.alignLegTrackersToUpperBody = this.alignLegTrackersToUpperBody();
}
}

export class YawCorrectionSettingsT implements flatbuffers.IGeneratedObject {
constructor(
  public enabled: boolean = false,
  public amountInDegPerSec: number = 0.0,
  public alignLegTrackers: boolean = false,
  public alignLegTrackersToUpperBody: boolean = false
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return YawCorrectionSettings.createYawCorrectionSettings(builder,
    this.enabled,
    this.amountInDegPerSec,
    this.alignLegTrackers,
    this.alignLegTrackersToUpperBody
  );
}
}
